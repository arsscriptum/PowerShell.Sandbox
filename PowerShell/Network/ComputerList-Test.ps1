<#
 #  ComputerList-Test.ps1
 #  Simple powershell script to handle computers on the LAN.
 #
 #  Bodycad utility script
 #  Copyright 2019 Bodycad Laboratories, Inc. All Rights Reserved.
 #
 #>

# Create an array of computers names
# I took those names by using the 'lusrmgr.msc' program.

$computers_1 = @("bcada001", "BCAD-APP01", "BCADD0013", "BCADD0111", "BCADD0216", "BCADD0225", "BCADD0251", "BCADD0252", "BCADD0253", "BCADD0254", "BCADD0255", "BCADD0257", "BCADD0260", "BCADD0261", "BCADD0263", "BCADD0264", "BCADD0265", "BCADD0266", "BCADD0267", "BCADD0268", "BCADD0269", "BCADD0270", "BCADD0271", "BCADD0272", "BCADD0273", "BCADD0274", "BCADD0276", "BCADD0277", "BCADD0278", "BCADD0279", "BCADD0280", "BCADD0281", "BCADD0282", "BCADD0349", "BCADD0350", "BCADD0351", "BCADD0353", "BCADD0354", "BCADD0355", "BCADD0356", "BCADD0357", "BCADD0358", "BCADD0359", "BCADD0360", "BCADD0361", "BCADD0362", "BCADD0365", "BCADD0366", "BCADD0367", "BCADD0368", "BCADD0369", "BCADD0370", "BCAD-FS-01", "BCADL0009", "BCADL0011", "BCADL0251", "BCADL0252", "BCADL0253", "BCADL0254", "BCADL0255", "BCADL0257", "BCADL0258", "BCADL0259", "BCADL0260", "BCADL0261", "BCADL0262", "BCADL0263", "BCADL0264", "BCADV0002", "BCADV0003", "BCADV0004", "BCADV0201", "BCCAD0352", "BCCAD0353", "CONFERENCE", "DC201B", "DESKTOP-74585RG", "DESKTOP-8FAK5PI", "DESKTOP-AITV0FD", "DESKTOP-EJF2PU6", "MGMT04", "NAV201B", "SQL201B")
$computers_2 = @("bcada001", "BCAD-APP01", "BCADD0013", "BCADD0111", "BCADD0216", "BCADD0225", "BCADD0251", "BCADD0252", "BCADD0253", "BCADD0254", "BCADD0255", "BCADD0257", "BCADD0260", "BCADD0261", "BCADD0263", "BCADD0264", "BCADD0265", "BCADD0266", "BCADD0267", "BCADD0268", "BCADD0269", "BCADD0270", "BCADD0271", "BCADD0272", "BCADD0273", "BCADD0274", "BCADD0276", "BCADD0277", "BCADD0278", "BCADD0279", "BCADD0280", "BCADD0281", "BCADD0282", "BCADD0349", "BCADD0350", "BCADD0351", "BCADD0353", "BCADD0354", "BCADD0355", "BCADD0356", "BCADD0357", "BCADD0358", "BCADD0359", "BCADD0360", "BCADD0361", "BCADD0362", "BCADD0365", "BCADD0366", "BCADD0367", "BCADD0368", "BCADD0369", "BCADD0370", "BCAD-FS-01", "BCADL0009", "BCADL0011", "BCADL0251", "BCADL0252", "BCADL0253", "BCADL0254", "BCADL0255", "BCADL0257", "BCADL0258", "BCADL0259", "BCADL0260", "BCADL0261", "BCADL0262", "BCADL0263", "BCADL0264", "BCADV0002", "BCADV0003", "BCADV0004", "BCADV0201", "BCCAD0352", "BCCAD0353", "CONFERENCE", "DC201B", "DESKTOP-74585RG", "DESKTOP-8FAK5PI", "DESKTOP-AITV0FD", "DESKTOP-EJF2PU6", "MGMT04", "NAV201B", "SQL201B", "BCAD-APP-01", "BCAD-HV-01", "BCAD-HV-02", "BCAD-HV-CL", "CAUBCAD-f31", "BCAD-APP-01", "BCAD-HV-01", "BCAD-HV-02", "BCAD-HV-CL", "CAUBCAD-f31", "DC101B", "BCAD-APP01", "BCAD-FS-01", "NAV201B", "SQL201B", "BCADD0013", "BCADD0111", "BCADD0216", "BCADD0225", "BCADD0251", "BCADD0252", "BCADD0253", "BCADD0254", "BCADD0255", "BCADD0257", "BCADD0260", "BCADD0261", "BCADD0263", "BCADD0264", "BCADD0265", "BCADD0266", "BCADD0267", "BCADD0268", "BCADD0269", "BCADD0270", "BCADD0271", "BCADD0272", "BCADD0273", "BCADD0274", "BCADD0276", "BCADD0277", "BCADD0278", "BCADD0279", "BCADD0280", "BCADD0281", "BCADD0282", "BCADD0349", "BCADD0350", "BCADD0351", "BCADD0353", "BCADD0354", "BCADD0355", "BCADD0356", "BCADD0357", "BCADD0358", "BCADD0359", "BCADD0360", "BCADD0361", "BCADD0362", "BCADD0365", "BCADD0366", "BCADD0367", "BCADD0368", "BCADD0369", "BCADD0370", "BCADL0009", "BCADL0011", "BCADL0251", "BCADL0252", "BCADL0253", "BCADL0254", "BCADL0255", "BCADL0257", "BCADL0258", "BCADL0259", "BCADL0260", "BCADL0261", "BCADL0262", "BCADL0263", "BCADL0264", "BCADV0002", "BCADV0003", "BCADV0004", "BCADV0201", "BCCAD0352", "BCCAD0353", "CONFERENCE", "DESKTOP-74585RG", "DESKTOP-8FAK5PI", "DESKTOP-AITV0FD", "DESKTOP-EJF2PU6", "MGMT04", "BCADD0111", "BCADD0266", "BCADD0268", "BCADD0270", "BCADD0274", "BCADD0276", "BCADD0358", "BCADD0251", "BCADD0252", "BCADD0253", "BCADD0254", "BCADD0255", "BCADD0257", "BCADD0260", "BCADD0261", "BCADD0263", "BCADD0264", "BCADD0265", "BCADD0272", "BCADD0273", "BCADD0353", "BCADL0252", "BCADD0013", "BCADD0216", "BCADD0267", "BCADD0269", "BCADD0271", "BCADD0278", "BCADD0279", "BCADD0280", "BCADD0281", "BCADD0282", "BCADD0349", "BCADD0350", "BCADD0351", "BCADD0354", "BCADD0355", "BCADD0356")
$computers_list = $computers_1 + $computers_2

$computers = @{}

Write-Host "Processing computers..." -NoNewline -ForegroundColor Magenta
Write-Host $computers_list.Length -ForegroundColor Red

$count = 0
$total = $computers_list.Length
foreach ($computer in $computers_list) 
{
    $requestip = $false;

    Write-Host $count -NoNewline -ForegroundColor Magenta
    Write-Host "/" -NoNewline -ForegroundColor Magenta
    Write-Host $total -NoNewline -ForegroundColor Magenta
    Write-Host "  [" -NoNewline -ForegroundColor Cyan
    Write-Host $computer -NoNewline -ForegroundColor Cyan
    if( $computers.ContainsKey($computer) -eq $false )
    {
        $computers.add($computer, $null)  
    }

    if($computers[$computer] -eq $null)
    {
        Write-Host "]: " -NoNewline -ForegroundColor Cyan
        $computers[$computer]=(Test-Connection -ComputerName $computer -Count 1).IPV4Address.IPAddressToString 
    }
    else {
        Write-Host "]: " -NoNewline -ForegroundColor Cyan
    }
    Write-Host $computers[$computer] -ForegroundColor Cyan
    $count = $count + 1
}

$logfile = "computers.log"
$filebase = Join-Path $PSScriptRoot $logfile

$computers | ConvertTo-Json | Add-Content -Path $filebase